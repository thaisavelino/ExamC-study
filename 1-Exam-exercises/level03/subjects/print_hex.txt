/* ************************************************
Assignment name  : print_hex
Expected files   : print_hex.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a program that takes a positive (or zero) number expressed in base 10,
and displays it in base 16 (lowercase letters) followed by a newline.

If the number of parameters is not 1, the program displays a newline.

Examples:

$> ./print_hex "10" | cat -e
a$
$> ./print_hex "255" | cat -e
ff$
$> ./print_hex "5156454" | cat -e
4eae66$
$> ./print_hex | cat -e
$

************************************************ */

#include <unistd.h>

void		ft_putchar(char c)
{
	write(1, &c, 1);
}

// atoi modified for this function

int		ft_atoi(char *str)
{
	int sign;
	int num;
	int	has_digit;

	num = 0;
	sign = 1;
	has_digit = -1;
	if (str && *str)
	{
		while ((*str >= 9 && *str <= 13) || *str == 32)
			str++;
		if (*str == '-')
			sign = -1;
		if (*str == '+' || *str == '-')
			str++;
		while (*str >= 48 && *str <= 57)
		{
			num = num * 10 + *str - '0';
			str++;
			has_digit = 1;
		}
	}
	if (has_digit == -1)
		return (-1);
	return (num * sign);
}

void	print_hex(int n)
{
	char *str;

	str = "0123456789abcdef";
	if (n >= 16)
		print_hex(n / 16);
	n = str[n % 16];
	write(1, &n, 1);
}


int		main(int argc, char **argv)
{
	int num;

	num = -1;
	if (argc == 2)
	{
		num = ft_atoi(argv[1]);
		(num >= 0) ? print_hex(num) : 0;
	}
	ft_putchar('\n');
}
